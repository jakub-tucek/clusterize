buildscript {
    ext.kotlinVersion = "1.3.10"
    ext.junitVersion = "5.0.0"
    ext.junitPlatformVersion = "1.0.0"
    ext.jacksonVersion = "2.9.7"

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
    }
}

repositories { mavenCentral() }

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'application'
apply from: "junit5.gradle"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile 'io.github.microutils:kotlin-logging:1.6.10'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testCompile 'org.assertj:assertj-core:3.11.1'

    runtime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    runtime "org.junit.platform:junit-platform-console:$junitPlatformVersion"
}


application {
    mainClassName = "cz.fit.metacentrum.MainKt"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

compileKotlin { kotlinOptions { jvmTarget = "1.8" } }
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" } }